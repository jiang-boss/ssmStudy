<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--用接口就要用接口的全类名-->
<mapper namespace="com.jiang.employeeDao.EmployeeMapper">
    <cache></cache>
<!--    <cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>-->
<!--
eviction:缓存的回收策略
flushInterval：缓存的刷新间隔
size：缓存存放多少元素
readOnly：是否可读
-->

<!--id  唯一标识
     resultType 返回值类型
     注意:这里用接口的时候就要用接口中的那个方法 这里的返回类型的类已经起了别名 在全局配置文件中typeAliases标签-->
    <select id="getInstance" resultType="Employee" >
        select * from tab_employee where id=#{id}
    </select>
    <!--    插入 mysql支持自增主键的主键 获取在插入的时候回返回自增的主键值 mybatis也可利用statement.getGenreatedKeys()来获取 -->
    <insert id="insertEmp" useGeneratedKeys="true" keyProperty="id">
        insert into tab_employee (last_name,email,gender) value (#{lastname},#{email},#{gender})
    </insert>
    <!--    更新方法-->
    <update id="updateEmp" parameterType="com.jiang.employeeDao.EmployeeMapper" >
        update tab_employee  set last_name=#{lastname},email=#{email},gender=#{gender} where id=#{id}
    </update>
    <!--    删除的方法-->
    <delete id="deleteEmp">
        delete from tab_employee where id=#{id}
    </delete>

<!--************************************************************************************************************************************-->
    <!--    这里查询多个参数的时候
    ${} 这个是取出参数直接放在sql语句中  这个一般使用在品串的操作 不支持预编译的字段中
     #{}是预编译的形式-->
    <select id="getEmpByIdAndLastname" resultType="employee">
        select  * from  tab_employee where id=${ids} and last_name=#{lastnames}
    </select>
    <!--    这里查询多个参数  这里传入的是多个参数封装成了一个map集合取出的参数的值是map集合中的key-->
    <select id="getEmpByEmp" resultType="employee">
        select  * from  tab_employee where id=#{id1} and last_name=#{lastname1}
    </select>

    <!--    模糊查询以返回一个list   public List<Employee> getEmpByLike(String lasetname);-->
    <select id="getEmpByLike" resultType="employee">
        select * from tab_employee where last_name like #{lastname}
    </select>


    <!--    查询map集合public Map<String,Object> getEmpByReturnMap(Integer id);  -->
    <select id="getEmpByReturnMap" resultType="map">
        select * from tab_employee where id=#{id}
    </select>

<!--    public Map<Integer,Employee> getEmpByReturnMaps(Integer id);-->
    <select id="getEmpByReturnMaps" resultType="employee">
        select * from tab_employee where last_name like #{lastname}
    </select>

</mapper>