<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
    <!--spring管理主要的业务逻辑组件-->
    <context:component-scan base-package="com.jiang">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--引入配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--spring用来控制业务逻辑 数据源 事务控制  aop-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${url}"></property>
        <property name="username" value="${u}"></property>
        <property name="password" value="${p}" ></property>
        <property name="driverClassName" value="${driver}"></property>
    </bean>
    <!--spring事务管理 创建是事务管理-->
    <bean  id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--开启事务管理器-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--整合mybatis  目的:spring管理所有组件   mapper的实现类
                        service——>dao  @autowired 自动注入
                        spring来管理事务
     -->
    <!--创建SQLSessionFactory对象-->
    <bean id="sessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--指定全局配置文件的位置-->
        <property name="configLocation" value="classpath:mybatis-conf.xml"></property>
        <!--指定mapper文件-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
    </bean>
    <!--扫描所有mapper接口的实现 让这些接口能够自动注入
    base-package: 指定mapper接口的包名
    -->
<!--    <mybatis-spring:scan base-package="com.jiang.employeeDao"></mybatis-spring:scan>-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.jiang.employeeDao"></property>
    </bean>
</beans>